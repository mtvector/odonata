meta:
  engine: "4.0.0"
  version: 1
  author: rschenk

units:
  # Key spacing
  kx: cx            # Choc spacing
  ky: cy
  # Keycap size
  capw: 17.5        # MBK keycaps
  caph: 16.5
  # Mirroring
  center_spread: capw # Distance between inner top keys
  master_angle: 20  # Degrees that the halves are angled
  # Stagger
  ring_stagger: 8
  middle_stagger: 5.5
  index_stagger: -3.375
  inner_stagger: -2.375
  # Splay
  ring_splay: 7     # Between pinky and ring
  middle_splay: 4   # Between ring and middle
  # Thumb cluster
  thumb_shift_x: 0
  thumb_shift_y: -ky
  thumb_splay: 7

  # Outlines
  edge_border: 2    # Border around PCB, outside the keycaps' perimeter
  outer_kx: capw + 2edge_border
  outer_ky: caph + 2edge_border
  # bump the top-center of the mcu cover down to match the master angle
  cover_bump_top: -4
  cover_bump_bottom: -9 # ditto on bottom
  cover_hole_margin: 3  # Inset from the edge
  mounting_hole_r: 1
  standoff_clearance_hole_r: 2.75

  # Components
  xiao_w: 17.5
  xiao_h: 21
  bat_plug_w: 7.6
  bat_plug_h: 5.9

  # Laser cutting
  kerf: 0.006 * 25.4 # Inches

points:
  zones.matrix:
    # Fix placement on KiCAD sheet
    anchor:
      shift: [100, -100]
    mirror: &mirror
      ref: matrix_inner_top
      distance: center_spread
      shift: [capw/2, caph/2]
    rotate: -master_angle
    key:
      padding: ky
      spread: kx
      tags: [key]
    columns:
      pinky:
        key:
          splay: ring_splay + middle_splay
          column_net: C0
        rows:
          top.bind: [0, 5, 0, 0]
          home.bind: 0
          bottom.bind: 0
      ring:
        key:
          stagger: ring_stagger
          splay: -ring_splay
          origin: [-kx/2, -ky/2]
          column_net: C1
        rows:
          top.bind: 0
          home.bind: 0
          # Make the bottom of the plate cleaner
          bottom.bind: [0, 40, 0, 0]
      middle:
        key:
          stagger: middle_stagger
          splay: -middle_splay
          origin: [-kx/2, -ky/2]
          column_net: C2
      index:
        key:
          stagger: index_stagger
          column_net: C3
      inner:
        key:
          stagger: inner_stagger
          column_net: C4
    rows:
      bottom:
        row_net: R2
        mirror.row_net: R6
      home:
        row_net: R1
        mirror.row_net: R5
      top:
        row_net: R0
        mirror.row_net: R4

  zones.thumbs:
    mirror: *mirror
    anchor:
      ref: matrix_inner_bottom
      shift: [thumb_shift_x, thumb_shift_y]
    key:
      padding: ky
      spread: kx
      tags: [key]
    columns:
      home:
        key:
          splay: -thumb_splay
          origin: [-kx/2, kx/2]
          column_net: C3
      reachy:
        key:
          splay: -thumb_splay
          origin: [-kx/2, -kx/2]
          column_net: C4
    rows:
      thumb:
        row_net: R3
        mirror.row_net: R7

  zones.mcu_cover_mounting_hole_top:
    mirror: *mirror
    anchor:
      ref: matrix_inner_home
      shift: [capw/2 + cover_hole_margin, -caph/2 + cover_hole_margin]
    key.tags: [mcu_cover_mounting_hole]

  zones.mcu_cover_mounting_hole_bottom:
    $extends: points.zones.mcu_cover_mounting_hole_top
    anchor:
      ref: matrix_inner_bottom
      shift: [capw/2 + cover_hole_margin, -caph/2 + cover_hole_margin]

  zones.mounting_hole_ring_top:
    mirror: *mirror
    anchor:
      ref: matrix_ring_top
      shift: [-10.1, -ky/2]
    key.tags: [mounting_hole]

  zones.mounting_hole_ring_bottom:
    $extends: points.zones.mounting_hole_ring_top
    anchor:
      ref: matrix_ring_home
      shift: [-9.5, -ky/2]

  zones.mounting_hole_index_top:
    $extends: points.zones.mounting_hole_ring_top
    anchor:
      ref: matrix_index_top
      shift: [8.5, -ky/2]

  zones.mounting_hole_thumb:
    $extends: points.zones.mounting_hole_ring_top
    anchor:
      ref.aggregate.parts: [thumbs_home_thumb, thumbs_reachy_thumb]
      shift: [0, 0.3]

  # First LED is a "sacrificial" one to allow 3v3 logic to control a 5v LED.
  # See: https://hackaday.com/2017/01/20/cheating-at-5v-ws2812-control-to-use-a-3-3v-data-line/
  zones.led_1:
    mirror: *mirror
    anchor:
      ref: matrix_middle_top
      shift: [kx/2 - 2, -5]
    key:
      tags: [led]
      VCC: led_1_v
      din: led
      dout: L2
      mirror:
        VCC: VUSB
        din: L11
        dout: ''

  zones.led_2:
    $extends: points.zones.led_1
    anchor:
      ref: matrix_pinky_top
      shift: [3.5, -5]
    key:
      VCC: VUSB
      din: L2
      dout: L3
      mirror:
        din: L10
        dout: L11

  zones.led_3:
    $extends: points.zones.led_2
    anchor:
      ref: matrix_pinky_home
      shift: [3, -5.5]
    key:
      din: L3
      dout: L4
      mirror:
        din: L9
        dout: L10

  zones.led_4:
    $extends: points.zones.led_2
    anchor:
      ref: matrix_middle_bottom
      shift: [kx/2 - 2, -7]
    key:
      din: L4
      dout: L5
      mirror:
        din: L8
        dout: L9

  zones.led_5:
    $extends: points.zones.led_2
    anchor:
      ref: matrix_inner_bottom
      shift: [5, -7]
    key:
      din: L5
      dout: L6
      mirror:
        din: L7
        dout: L8

  zones.led_6:
    $extends: points.zones.led_2
    mirror: $unset
    anchor:
      ref.aggregate.parts: [thumbs_reachy_thumb, mirror_thumbs_reachy_thumb]
      shift: [0, 3]
    key:
      din: L6
      dout: L7
      mirror: $unset

outlines:
  raw:
    - what: rectangle
      where: key
      size: [outer_kx, outer_ky]
      bound: true
  _center_glue:
    - what: polygon
      operation: add
      points:
        - ref: matrix_inner_home
          shift: [kx/2, ky/2]
        - ref: mirror_matrix_inner_home
          shift: [kx/2, ky/2]
        - ref: mirror_thumbs_home_thumb
          shift: [0, 0]
        - ref: mirror_thumbs_reachy_thumb
          shift: [outer_kx/2, -outer_ky/2]
        - ref.aggregate.parts: [thumbs_reachy_thumb, mirror_thumbs_reachy_thumb]
          shift: [0, -outer_ky/2]
        - ref: thumbs_reachy_thumb
          shift: [outer_kx/2, -outer_ky/2]
        - ref: thumbs_home_thumb
          shift: [0, 0]
  keycaps:
    - what: rectangle
      where: key
      size: [capw, caph]
  switch_holes:
    - what: rectangle
      where: key
      size: [14 - kerf, 14 - kerf]
  top_plate:
    - name: raw
    - name: switch_holes
      operation: subtract
  all_mounting_holes:
    - what: circle
      where: [mounting_hole, mcu_cover_mounting_hole]
      radius: mounting_hole_r
  mcu_cover:
    - what: polygon
      points:
        - ref: matrix_inner_home
          shift: [(kx + kx - capw)/2, caph/2]
        - ref.aggregate.parts:
          - ref: matrix_inner_home
            shift: [(kx + kx - capw)/2, caph/2]
          - ref: mirror_matrix_inner_home
            shift: [(kx + kx - capw)/2, caph/2]
          shift: [0, cover_bump_top]
        - ref: mirror_matrix_inner_home
          shift: [(kx + kx - capw)/2, caph/2]
        - ref: mirror_matrix_inner_bottom
          shift: [(kx + kx - capw)/2, -caph/2]
        - ref.aggregate.parts:
          - ref: matrix_inner_bottom
            shift: [(kx + kx - capw)/2, -caph/2]
          - ref: mirror_matrix_inner_bottom
            shift: [(kx + kx - capw)/2, -caph/2]
          shift: [0, cover_bump_bottom]
        - ref: matrix_inner_bottom
          shift: [(kx + kx - capw)/2, -caph/2]
    - what: circle
      where: mcu_cover_mounting_hole
      operation: stack
      radius: mounting_hole_r
  board:
    - name: raw
    - name: _center_glue
  comp:
    - name: board
    # - name: switch_holes
    #   operation: stack
    - name: keycaps
      operation: stack
    - name: all_mounting_holes
      operation: stack
    - name: mcu_cover
      operation: stack

pcbs:
  regret:
    outlines:
      main:
        outline: board
    footprints:
      choc_hotswap:
        what: choc
        where: key
        params:
          from: "{{row_net}}"
          to: "{{colrow}}"
          keycaps: false
          reverse: false
          hotswap: true

      choc_bonus_goodies:
        what: choc_bonus_goodies
        where: key
        params:
          corner_feet: false
          outline: true
          hotswap_silk_screen: true
          bottom_plate_cutout: true

      key_diodes:
        what: better_diode
        where: key
        params:
          from: "{{colrow}}"
          to: "{{column_net}}"
          through_hole: false
          front: true
          back: false
          via_from: false
          via_to: false
        adjust:
          shift: [0, -4.7]

      seeed_xiao:
        what: seeed_xiao
        where:
          ref.aggregate.parts: [matrix_inner_home, mirror_matrix_inner_home]
          shift: [0, -7.5]
        params:
          pogo_pins: true
          P0: LED
          P1: C0
          P2: C1
          P3: C2
          P4: C3
          P5: C4
          P10: SER
          P9: RCLK
          P8: SRCLK

      shift_register:
        what: shift_register
        where:
          ref.aggregate.parts: [matrix_inner_home, mirror_matrix_inner_home]
          shift: [0, -25]
          rotate: -90
        params:
          side: B
          QA: R4
          QB: R5
          QC: R6
          QD: R7
          QE: R3
          QF: R2
          QG: R1
          QH: R0
          SRCLR: VCC
          OE: GND

      # First LED is a "sacrificial" one to allow 3v3 logic to control a 5v LED.
      # See: https://hackaday.com/2017/01/20/cheating-at-5v-ws2812-control-to-use-a-3-3v-data-line/
      led_1_diode:
        what: better_diode
        where:
          ref: matrix_middle_top
          shift: [kx/2 + 1, -3]
        params:
          from: VUSB
          to: led_1_v
          through_hole: false
          front: false
          back: true
          via_from: false
          via_to: false
        adjust:
          shift: [0, 3]

      leds:
        what: ws2812b
        where: [led]
        params:
          side: B
          VCC: "{{VCC}}"
          din: "{{din}}"
          dout: "{{dout}}"

      power_sw:
        what: slider
        where.$extends: pcbs.regret.footprints.seeed_xiao.where
        adjust.shift: [-0.5, xiao_h/2]
        params:
          side: B
          from: "BAT+"
          to: BAT_POS

      battery:
        what: jstph
        where:
          $extends: pcbs.regret.footprints.seeed_xiao.where
          rotate: 90
        adjust.shift: [-xiao_h/2 - bat_plug_h/2 - 0.5, xiao_w/2 + 0.5]
        params:
          pos: BAT_POS
          neg: GND

      reset_button:
        what: button_side_push
        where:
          ref: mirror_matrix_inner_top
          shift: [outer_kx/2 - 2.1, outer_ky/2 - 4]
          rotate: -90
        params:
          side: B
          from: RST
          to: GND

      mcu_mounting_holes:
        what: hole_m2
        where: [mcu_cover_mounting_hole]
        params:
          plated: true

      mounting_holes:
        what: hole_m2
        where: [mounting_hole]


